using System;

class SudokuSolver
{
    static int[,] board = new int[9, 9]
    {
        {5,3,0, 0,7,0, 0,0,0},
        {6,0,0, 1,9,5, 0,0,0},
        {0,9,8, 0,0,0, 0,6,0},

        {8,0,0, 0,6,0, 0,0,3},
        {4,0,0, 8,0,3, 0,0,1},
        {7,0,0, 0,2,0, 0,0,6},

        {0,6,0, 0,0,0, 2,8,0},
        {0,0,0, 4,1,9, 0,0,5},
        {0,0,0, 0,8,0, 0,7,9}
    };

    static void PrintBoard()
    {
        for (int row = 0; row < 9; row++)
        {
            if (row % 3 == 0 && row != 0)
                Console.WriteLine("---------------------");

            for (int col = 0; col < 9; col++)
            {
                if (col % 3 == 0 && col != 0)
                    Console.Write("| ");

                Console.Write(board[row, col] == 0 ? ". " : board[row, col] + " ");
            }
            Console.WriteLine();
        }
    }

 
    static bool IsValid(int row, int col, int num)
    {
       
        for (int x = 0; x < 9; x++)
            if (board[row, x] == num)
                return false;

    
        for (int y = 0; y < 9; y++)
            if (board[y, col] == num)
                return false;

       
        int startRow = (row / 3) * 3;
        int startCol = (col / 3) * 3;

        for (int i = startRow; i < startRow + 3; i++)
            for (int j = startCol; j < startCol + 3; j++)
                if (board[i, j] == num)
                    return false;

        return true;
    }

    // Backtracking solver method
    static bool Solve()
    {
        for (int row = 0; row < 9; row++)
        {
            for (int col = 0; col < 9; col++)
            {
                if (board[row, col] == 0) 
                {
                    for (int num = 1; num <= 9; num++)
                    {
                        if (IsValid(row, col, num))
                        {
                            board[row, col] = num;

                            if (Solve())
                                return true;
                            else
                                board[row, col] = 0; 
                        }
                    }
                    return false; 
                }
            }
        }
        return true; 
    }

    static void Main()
    {
        Console.WriteLine("Initial Sudoku board:");
        PrintBoard();

        if (Solve())
        {
            Console.WriteLine("\nSolved Sudoku board:");
            PrintBoard();
        }
        else
        {
            Console.WriteLine("No solution exists for this Sudoku puzzle.");
        }

        Console.ReadLine();
    }
}
